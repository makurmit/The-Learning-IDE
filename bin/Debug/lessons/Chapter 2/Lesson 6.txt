Chapter 2: The Basics
Lesson 6: User Input

User input is anything we need to get from the user, common examples are: username, password, and date of birth. Like Random() input is a method, but the syntax (wording) varies from language to language. Input returns a String and will need to be changed if you want to do mathematical operations on it.

In Java user input is gained like this:
	//at the top of the file
	import java.utils.Scanner;
	
	//the argument scanner is looking for is where we are reading input, System.in is the only place I've ever needed to put in there
	Scanner scan = new Scanner(System.in);
	//this is a simple prompt so the user knows what we need
	System.out.println("Please enter your name:");
	string name = scan.next();
	//if we don't close the scanner it will waste resources
	scan.close();
	
	System.out.println("Hello " + name);
As you can see it takes a little bit to get input in Java. The line that's most important is "scan.next()", this will wait until the user types something and presses enter. Once the user gives input "name" will be assigned that value.

In C#:
	Console.WriteLine("Enter your name please:");
	String name = Console.ReadLine();
	//the $"" is a way to format a variable into String, it's very useful in Console.WriteLine()
	Console.WriteLine($"Hello {name}");


Python:
	#the parameter here will prompt the user for what the input is for
	#the \n creates a new line and isn't necessary it just looks better
	name = input("What is your name?\n")
	print("Nice to meet you", name)
Because Python is dynamically typed you won't have to worry about parsing the input.


Ruby:
	puts "Are you tired of me asking for your name yet?"
	name = gets.chomp
	puts name + ", I'm sorry"
The gets.chomp will get rid of any special characters after the input, in this case the \n (new line) character.


In order to get input in JavaScript we need to use a form in HTML:
	<form>
        <input type="text" name="inputBox" value="">
        <input type="button" value="Submit" onClick="SendData(this.form)">
    </form>
The first and last line specify the HTML object of "form" so we can use input types. The second line creates a textbox that will allow users to type something into the page. The "type" is text, the "name" is user given, just like a variable, the value is what it starts with, in this case we want it blank. The third line is the submit button. It's "type" is button, the value is what's written on it, again this is user given but it's best to use "submit" or "enter". Lastly is the method call for our JavaScript, this will send our values in the form. Now onto the JavaScript portion, before you can do anything with the data specify the ".js" file in the HTML:
	<script src="Input.js"/>
This goes anywhere inside the "html" tags. Once we have that we need to create the "SendData" method that takes in the form:
	function SendData(form){
	}
This will be called anytime we push the button. In order to access the data we need to use "form.inputBox.value":
	var num = form.inputBox.value
From there you can treat it like a normal variable.