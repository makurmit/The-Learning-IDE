Chapter 5: Advanced Concepts
Lesson 2: Enums

Enums are enumerated types, meaning custom variables. These variables can have as many or as few values as you wish. Let's say you are making a program where you decode Morse code. Morse code uses three values: dot, dash, and space. So we can't use a boolean as we need more than 2 values, we could use a string but that could be any value. So let's make a new variable "Morse":
	public enum Morse
	{
		dot,
		dash,
		space;
	}
It's as simple as that. This will allow for the creation of the Morse variable, it can have the three values specified: "dot", "dash", and "space".


Now let's make a new variable of the type Morse:
	Morse m = Morse.dot;
Here we can see that we need to specify the Morse type and then the Morse value. If we tried to assign it a different value like "line" it would crash the program, so make sure that you check the values of that enum.


Now time for the differences. C# is exactly the same as Java. Python looks like this:
	from enum import Enum
	Morse = Enum("Morse", "dot dash space")
	print(Morse.dot)
This creates the enum "Morse" and gives it three values dot/dash/space.


Ruby:
	module Morse
		DOT = "."
		DASH = "-"
		SPACE = " "
	end
	#this will output "."
	puts Morse::DOT
The main thing to take away here is that an enum value needs a default value. In order to reference an enum value you need to specify the enum name "Morse", two colons "::", and then the value "DOT".