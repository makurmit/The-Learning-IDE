C# Fundamentals

Introduction: 
	C# is an object orientated, statically and strongly typed, compiled language. C# allows for creation of objects which can interact with each other and hold more information. Statically typed languages require variable types to be declared, for instance "int num" instead of just "num". Strongly typed means variables cannot change typing without some means of parsing or casting. Lastly C# is compiled which allows for faster program boot time, but requires the code to be processed into another file before running the program.

Advantages: 
	There are plenty of advantages to C#. It's great for large scale projects, it doesn't take much to build off older projects. Object orientation is done very easily, the syntax is much easier to read than some other languages. C# is similar to Java, if you know Java it's a lower barrier to enter. There's cross platform support. Also it adapts to modern syntax, if one way is seen as deprecated Microsoft will implement a new way.

Disadvantages: 
	There are less disadvantages to C# than most languages. If you dislike Java it's fairly similar to Java, however it does do away some issues Java has with verbose syntax. Statically typed takes a bit longer to code rather than dynamically typed. Generally speaking Java is used more for android development, but frameworks like Xamarin are helping C# build multi-platform programs.

Supported Platforms: mainly Windows, Linux and MacOS, and mobile. C# is made by Microsoft so naturally it is supported on Windows natively. With the assistance of the framework Mono C# can run on Linux and MacOS with some limitations. Mobile is also supported through frameworks like: Xamarin and Monocross.

Versions: The first version of C# was released on February 2002. The latest release is C# 7.2 which released in November 2017.

Popular Frameworks: .Net, Mono, and WPF.

Code Example: "Console.WriteLine("Hello World!");"


References:
	https://en.wikibooks.org/wiki/C_Sharp_Programming
	https://simple.wikipedia.org/wiki/C_Sharp_(programming_language)
	https://app.pluralsight.com/library/courses/csharp-fundamentals-csharp5/table-of-contents
	https://docs.microsoft.com/en-us/dotnet/csharp/