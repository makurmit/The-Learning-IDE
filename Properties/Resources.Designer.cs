//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace The_Learning_IDE.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("The_Learning_IDE.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C# Fundamentals
        ///
        ///Introduction: 
        ///	C# is an object orientated, statically and strongly typed, compiled language. C# allows for creation of objects which can interact with each other and hold more information. Statically typed languages require variable types to be declared, for instance &quot;int num&quot; instead of just &quot;num&quot;. Strongly typed means variables cannot change typing without some means of parsing or casting. Lastly C# is compiled which allows for faster program boot time, but requires the code to be pro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Csharp_Fundamentals {
            get {
                return ResourceManager.GetString("Csharp_Fundamentals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array
        ///	C#
        ///		int[] nums = new int[5];
        ///		nums[0] = 1;
        ///	Java
        ///		int[] nums = new int[5];
        ///		nums[0] = 1;
        ///	Python
        ///		nums = []
        ///		nums[0] = 1
        ///	Ruby
        ///		nums = []
        ///		nums[0] = 1
        ///-------------------------------------------------
        ///ArrayList
        ///	C#
        ///		using Systems.Collections;
        ///		ArrayList nums = new ArrayList();
        ///		nums.Add(10);
        ///		nums[0] = 20;
        ///		nums.RemoveAt(0);
        ///		nums.Count;
        ///	Java
        ///		import java.util.ArrayList;
        ///		ArrayList&lt;Integer&gt; nums = new ArrayList();
        ///		nums.get(0);
        ///		nums.add(10);
        ///		nums.set(0 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Glossary {
            get {
                return ResourceManager.GetString("Glossary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help:
        ///
        ///Installation guide:
        ///  C#
        ///   Install Mono from http://www.mono-project.com/download/
        ///   Add mono to the path:
        ///	Add bin file location (default is in program files)
        ///   To verify run cmd and type &quot;mono -V&quot;
        ///  
        ///  Java
        ///   Install the latest jdk from http://www.oracle.com/technetwork/java/javase/downloads/index.html
        ///   Add java to the path: 
        ///    Add bin file location (default is program files)
        ///   To verify run cmd and type &quot;java -version&quot;
        ///  
        ///  Python
        ///   Install Python from https://www.python. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Java Fundamentals
        ///
        ///Introduction: 
        ///	Java is a compiled, statically typed, object orientated language. Java compiles the source code into machine code so it will have faster boot times. This does take a bit longer than a running a script, however larger programs benefit from compilation. Statically typed languages require the user to specify the variable type before creating it. Object Orientated languages focus on making objects which interact with each other and hold more information.
        ///
        ///Advantages: 
        ///	J [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Java_Fundamentals {
            get {
                return ResourceManager.GetString("Java_Fundamentals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JavaScript Fundamentals
        ///
        ///Introduction: 
        ///
        ///Advantages: 
        ///
        ///Disadvantages: 
        ///
        ///Supported Platforms: 
        ///
        ///Versions: 
        ///
        ///Popular Frameworks: 
        ///
        ///Code Example: 
        ///
        ///
        ///References:.
        /// </summary>
        internal static string JavaScript_Fundamentals {
            get {
                return ResourceManager.GetString("JavaScript_Fundamentals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Python Fundamentals
        ///
        ///Introduction: 
        ///	Python is an open source scripting language. It is very approachable and dynamically typed. Open source languages are open to the public and anyone can make changes to the language. Scripting languages tend to deal with smaller programs that do one or a few tasks. Scripting languages are not compiled, they are interpreted at run time. Python is designed to be simple and readable, because of this Python is deemed a great beginning language. Dynamically typed languages  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Python_Fundamentals {
            get {
                return ResourceManager.GetString("Python_Fundamentals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ruby Fundamentals
        ///
        ///Introduction: 
        ///	Ruby is a dynamically typed scripting language with a focus on simplicity. It is also open source. Dynamically typed languages don&apos;t require type declarations for variables. Scripting languages are not compiled and focus on smaller programs. Open source languages are supported by the community and are free to use. Lastly the focus on simplicity cuts down on a lot of annoying syntax rampant in other languages, thus making Ruby an excellent beginning language.
        ///	
        ///Advanta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Ruby_Fundamentals {
            get {
                return ResourceManager.GetString("Ruby_Fundamentals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hello and welcome to my IDE.
        ///
        ///To start press Lessons and select Chapter 1 Introduction.
        ///
        ///If you do not have the compilers for C#, Java, Python, and/or Ruby click on the help button.
        ///
        ///The text field will unlock once you have a file open..
        /// </summary>
        internal static string Welcome {
            get {
                return ResourceManager.GetString("Welcome", resourceCulture);
            }
        }
    }
}
